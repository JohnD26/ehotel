{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\domin\\\\Downloads\\\\ehotel\\\\client\\\\src\\\\components\\\\CreateAccount.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './CreateAccount.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreateAccount = () => {\n  _s();\n  const [accountCreated, setAccountCreated] = useState(false);\n  const [showSIN, setShowSIN] = useState(false); // State to toggle SIN visibility\n  const [formData, setFormData] = useState({\n    firstName: '',\n    lastName: '',\n    email: '',\n    password: '',\n    sin: '',\n    phoneNumber: '',\n    // Placeholder for phone number\n    customerAddress: '' // Placeholder for address\n  });\n  const navigate = useNavigate();\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prevState => ({\n      ...prevState,\n      [name]: value\n    }));\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    // Adjust according to your server configuration\n    try {\n      const response = await fetch('http://localhost:3001/api/customer', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        credentials: 'include',\n        body: JSON.stringify({\n          ...formData\n          // Combine individual fields if necessary for your backend\n          // Example: customerAddress might need to be a single string\n          // customerAddress: `${formData.streetNumber} ${formData.streetName}, ${formData.city}, ${formData.region}, ${formData.postalCode}`,\n        })\n      });\n      if (response.ok) {\n        setAccountCreated(true);\n        navigate('/'); // Or navigate to another route on success\n      } else {\n        const responseData = await response.json();\n        console.error('Account creation failed:', responseData);\n        // Handle response error (e.g., show an error message to the user)\n      }\n    } catch (error) {\n      console.error('Failed to create account:', error);\n      // Handle fetch error (e.g., show an error message to the user)\n    }\n  };\n\n  // Toggle SIN visibility\n  const toggleSINVisibility = () => {\n    setShowSIN(!showSIN);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"create-account-container\",\n    children: accountCreated ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"account-created-message\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Congratulations, your account has been created!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => navigate('/'),\n        children: \"Go Back to Hotels\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"create-account-form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"firstName\",\n        value: formData.firstName,\n        onChange: handleInputChange,\n        placeholder: \"First Name\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"lastName\",\n        value: formData.lastName,\n        onChange: handleInputChange,\n        placeholder: \"Last Name\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        name: \"email\",\n        value: formData.email,\n        onChange: handleInputChange,\n        placeholder: \"Email Address\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        value: formData.password,\n        onChange: handleInputChange,\n        placeholder: \"Password\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: showSIN ? \"text\" : \"password\",\n        name: \"sin\",\n        value: formData.sin,\n        onChange: handleInputChange,\n        placeholder: \"SIN (e.g., 123-456-789)\",\n        pattern: \"\\\\d{3}-\\\\d{3}-\\\\d{3}\",\n        title: \"SIN format: 123-456-789\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: toggleSINVisibility,\n        className: \"toggle-sin\",\n        children: showSIN ? \"Hide SIN\" : \"Show SIN\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"create-account-submit\",\n        children: \"Create Account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => navigate('/'),\n        className: \"back-button\",\n        children: \"Back to Hotels\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n};\n_s(CreateAccount, \"Z6nx1zo2FLMVbGPvfOkWe8Gsoog=\", false, function () {\n  return [useNavigate];\n});\n_c = CreateAccount;\nexport default CreateAccount;\nvar _c;\n$RefreshReg$(_c, \"CreateAccount\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","CreateAccount","_s","accountCreated","setAccountCreated","showSIN","setShowSIN","formData","setFormData","firstName","lastName","email","password","sin","phoneNumber","customerAddress","navigate","handleInputChange","e","name","value","target","prevState","handleSubmit","event","preventDefault","response","fetch","method","headers","credentials","body","JSON","stringify","ok","responseData","json","console","error","toggleSINVisibility","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onSubmit","type","onChange","placeholder","required","pattern","title","_c","$RefreshReg$"],"sources":["C:/Users/domin/Downloads/ehotel/client/src/components/CreateAccount.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './CreateAccount.css';\r\n\r\nconst CreateAccount = () => {\r\n    const [accountCreated, setAccountCreated] = useState(false);\r\n    const [showSIN, setShowSIN] = useState(false); // State to toggle SIN visibility\r\n    const [formData, setFormData] = useState({\r\n        firstName: '',\r\n        lastName: '',\r\n        email: '',\r\n        password: '',\r\n        sin: '',\r\n        phoneNumber: '', // Placeholder for phone number\r\n        customerAddress: '', // Placeholder for address\r\n    });\r\n    const navigate = useNavigate();\r\n\r\n    const handleInputChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setFormData(prevState => ({\r\n            ...prevState,\r\n            [name]: value,\r\n        }));\r\n    };\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n\r\n        // Adjust according to your server configuration\r\n        try {\r\n            const response = await fetch('http://localhost:3001/api/customer', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                credentials: 'include',\r\n                body: JSON.stringify({\r\n                    ...formData,\r\n                    // Combine individual fields if necessary for your backend\r\n                    // Example: customerAddress might need to be a single string\r\n                    // customerAddress: `${formData.streetNumber} ${formData.streetName}, ${formData.city}, ${formData.region}, ${formData.postalCode}`,\r\n                }),\r\n            });\r\n\r\n            if (response.ok) {\r\n                setAccountCreated(true);\r\n                navigate('/'); // Or navigate to another route on success\r\n            } else {\r\n                const responseData = await response.json();\r\n                console.error('Account creation failed:', responseData);\r\n                // Handle response error (e.g., show an error message to the user)\r\n            }\r\n        } catch (error) {\r\n            console.error('Failed to create account:', error);\r\n            // Handle fetch error (e.g., show an error message to the user)\r\n        }\r\n    };\r\n\r\n    // Toggle SIN visibility\r\n    const toggleSINVisibility = () => {\r\n        setShowSIN(!showSIN);\r\n    };\r\n\r\n    return (\r\n        <div className=\"create-account-container\">\r\n            {accountCreated ? (\r\n                <div className=\"account-created-message\">\r\n                    <h2>Congratulations, your account has been created!</h2>\r\n                    <button onClick={() => navigate('/')}>Go Back to Hotels</button>\r\n                </div>\r\n            ) : (\r\n                <form className=\"create-account-form\" onSubmit={handleSubmit}>\r\n                    <input type=\"text\" name=\"firstName\" value={formData.firstName} onChange={handleInputChange} placeholder=\"First Name\" required />\r\n                    <input type=\"text\" name=\"lastName\" value={formData.lastName} onChange={handleInputChange} placeholder=\"Last Name\" required />\r\n                    <input type=\"email\" name=\"email\" value={formData.email} onChange={handleInputChange} placeholder=\"Email Address\" required />\r\n                    <input type=\"password\" name=\"password\" value={formData.password} onChange={handleInputChange} placeholder=\"Password\" required />\r\n                    <input type={showSIN ? \"text\" : \"password\"} name=\"sin\" value={formData.sin} onChange={handleInputChange} placeholder=\"SIN (e.g., 123-456-789)\" pattern=\"\\d{3}-\\d{3}-\\d{3}\" title=\"SIN format: 123-456-789\" required />\r\n                    <button type=\"button\" onClick={toggleSINVisibility} className=\"toggle-sin\">{showSIN ? \"Hide SIN\" : \"Show SIN\"}</button>\r\n                    {/* Adding additional inputs for phoneNumber and customerAddress as needed */\r\n\r\n                    }\r\n                    <button type=\"submit\" className=\"create-account-submit\">Create Account</button>\r\n                    <button type=\"button\" onClick={() => navigate('/')} className=\"back-button\">Back to Hotels</button>\r\n                </form>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CreateAccount;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}